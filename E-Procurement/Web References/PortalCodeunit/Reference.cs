//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace E_Procurement.PortalCodeunit {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PortalCodeunit_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit")]
    public partial class PortalCodeunit : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback TestconnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendNotMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCommitteeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDirectorPayslipOperationCompleted;
        
        private System.Threading.SendOrPostCallback VoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccreditationApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Rfastep1OperationCompleted;
        
        private System.Threading.SendOrPostCallback Rfastep2OperationCompleted;
        
        private System.Threading.SendOrPostCallback Rfastep3OperationCompleted;
        
        private System.Threading.SendOrPostCallback Rfastep4OperationCompleted;
        
        private System.Threading.SendOrPostCallback SavegeneraldetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveExperienceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAcademicTrainingOperationCompleted;
        
        private System.Threading.SendOrPostCallback Rfmstep1OperationCompleted;
        
        private System.Threading.SendOrPostCallback Rfmstep2OperationCompleted;
        
        private System.Threading.SendOrPostCallback Rfmstep3OperationCompleted;
        
        private System.Threading.SendOrPostCallback Rfmstep4OperationCompleted;
        
        private System.Threading.SendOrPostCallback AccreditationRenewalOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOtherPartyOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback RfaGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerPhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBlobOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintRfaOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResponseStep1OperationCompleted;
        
        private System.Threading.SendOrPostCallback ResponseStep2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ResponseStep3OperationCompleted;
        
        private System.Threading.SendOrPostCallback ResponseStep4OperationCompleted;
        
        private System.Threading.SendOrPostCallback PreviewResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResponseBlobOperationCompleted;
        
        private System.Threading.SendOrPostCallback BookFacilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddExtraServicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SignupContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForgotPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceBidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteTestIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnIForgotMyPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemImageOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PortalCodeunit() {
            this.Url = global::E_Procurement.Properties.Settings.Default.E_Procurement_PortalCodeunit_PortalCodeunit;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event TestconnectionCompletedEventHandler TestconnectionCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event AddlogCompletedEventHandler AddlogCompleted;
        
        /// <remarks/>
        public event ResetPassCompletedEventHandler ResetPassCompleted;
        
        /// <remarks/>
        public event SendNotMailCompletedEventHandler SendNotMailCompleted;
        
        /// <remarks/>
        public event CreateCommitteeCompletedEventHandler CreateCommitteeCompleted;
        
        /// <remarks/>
        public event InsertMemberCompletedEventHandler InsertMemberCompleted;
        
        /// <remarks/>
        public event GenerateDirectorPayslipCompletedEventHandler GenerateDirectorPayslipCompleted;
        
        /// <remarks/>
        public event VoteCompletedEventHandler VoteCompleted;
        
        /// <remarks/>
        public event RegisterCompletedEventHandler RegisterCompleted;
        
        /// <remarks/>
        public event AddLanguageCompletedEventHandler AddLanguageCompleted;
        
        /// <remarks/>
        public event AccreditationApplicationCompletedEventHandler AccreditationApplicationCompleted;
        
        /// <remarks/>
        public event Rfastep1CompletedEventHandler Rfastep1Completed;
        
        /// <remarks/>
        public event Rfastep2CompletedEventHandler Rfastep2Completed;
        
        /// <remarks/>
        public event Rfastep3CompletedEventHandler Rfastep3Completed;
        
        /// <remarks/>
        public event Rfastep4CompletedEventHandler Rfastep4Completed;
        
        /// <remarks/>
        public event SavegeneraldetailsCompletedEventHandler SavegeneraldetailsCompleted;
        
        /// <remarks/>
        public event SaveExperienceCompletedEventHandler SaveExperienceCompleted;
        
        /// <remarks/>
        public event SaveAcademicTrainingCompletedEventHandler SaveAcademicTrainingCompleted;
        
        /// <remarks/>
        public event Rfmstep1CompletedEventHandler Rfmstep1Completed;
        
        /// <remarks/>
        public event Rfmstep2CompletedEventHandler Rfmstep2Completed;
        
        /// <remarks/>
        public event Rfmstep3CompletedEventHandler Rfmstep3Completed;
        
        /// <remarks/>
        public event Rfmstep4CompletedEventHandler Rfmstep4Completed;
        
        /// <remarks/>
        public event AccreditationRenewalCompletedEventHandler AccreditationRenewalCompleted;
        
        /// <remarks/>
        public event AddOtherPartyCompletedEventHandler AddOtherPartyCompleted;
        
        /// <remarks/>
        public event VerifyCompletedEventHandler VerifyCompleted;
        
        /// <remarks/>
        public event RfaGeneralDetailsCompletedEventHandler RfaGeneralDetailsCompleted;
        
        /// <remarks/>
        public event GetCustomerPhotoCompletedEventHandler GetCustomerPhotoCompleted;
        
        /// <remarks/>
        public event GetBlobCompletedEventHandler GetBlobCompleted;
        
        /// <remarks/>
        public event PrintRfaCompletedEventHandler PrintRfaCompleted;
        
        /// <remarks/>
        public event ResponseStep1CompletedEventHandler ResponseStep1Completed;
        
        /// <remarks/>
        public event ResponseStep2CompletedEventHandler ResponseStep2Completed;
        
        /// <remarks/>
        public event ResponseStep3CompletedEventHandler ResponseStep3Completed;
        
        /// <remarks/>
        public event ResponseStep4CompletedEventHandler ResponseStep4Completed;
        
        /// <remarks/>
        public event PreviewResponseCompletedEventHandler PreviewResponseCompleted;
        
        /// <remarks/>
        public event GetResponseBlobCompletedEventHandler GetResponseBlobCompleted;
        
        /// <remarks/>
        public event BookFacilityCompletedEventHandler BookFacilityCompleted;
        
        /// <remarks/>
        public event AddExtraServicesCompletedEventHandler AddExtraServicesCompleted;
        
        /// <remarks/>
        public event SignupContactCompletedEventHandler SignupContactCompleted;
        
        /// <remarks/>
        public event ForgotPassCompletedEventHandler ForgotPassCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event PlaceBidCompletedEventHandler PlaceBidCompleted;
        
        /// <remarks/>
        public event SendEmailCompletedEventHandler SendEmailCompleted;
        
        /// <remarks/>
        public event FnDeleteTestIDCompletedEventHandler FnDeleteTestIDCompleted;
        
        /// <remarks/>
        public event FnIForgotMyPasswordCompletedEventHandler FnIForgotMyPasswordCompleted;
        
        /// <remarks/>
        public event GetItemImageCompletedEventHandler GetItemImageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:Testconnection", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="Testconnection_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Testconnection() {
            this.Invoke("Testconnection", new object[0]);
        }
        
        /// <remarks/>
        public void TestconnectionAsync() {
            this.TestconnectionAsync(null);
        }
        
        /// <remarks/>
        public void TestconnectionAsync(object userState) {
            if ((this.TestconnectionOperationCompleted == null)) {
                this.TestconnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestconnectionOperationCompleted);
            }
            this.InvokeAsync("Testconnection", new object[0], this.TestconnectionOperationCompleted, userState);
        }
        
        private void OnTestconnectionOperationCompleted(object arg) {
            if ((this.TestconnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestconnectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:Login", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="Login_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Login(string customerNumber, string password) {
            object[] results = this.Invoke("Login", new object[] {
                        customerNumber,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string customerNumber, string password) {
            this.LoginAsync(customerNumber, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string customerNumber, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        customerNumber,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:Addlog", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="Addlog_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Addlog(string member, string key, string generatedAt) {
            object[] results = this.Invoke("Addlog", new object[] {
                        member,
                        key,
                        generatedAt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddlogAsync(string member, string key, string generatedAt) {
            this.AddlogAsync(member, key, generatedAt, null);
        }
        
        /// <remarks/>
        public void AddlogAsync(string member, string key, string generatedAt, object userState) {
            if ((this.AddlogOperationCompleted == null)) {
                this.AddlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddlogOperationCompleted);
            }
            this.InvokeAsync("Addlog", new object[] {
                        member,
                        key,
                        generatedAt}, this.AddlogOperationCompleted, userState);
        }
        
        private void OnAddlogOperationCompleted(object arg) {
            if ((this.AddlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddlogCompleted(this, new AddlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:ResetPass", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="ResetPass_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ResetPass(string customerNo, string password) {
            object[] results = this.Invoke("ResetPass", new object[] {
                        customerNo,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPassAsync(string customerNo, string password) {
            this.ResetPassAsync(customerNo, password, null);
        }
        
        /// <remarks/>
        public void ResetPassAsync(string customerNo, string password, object userState) {
            if ((this.ResetPassOperationCompleted == null)) {
                this.ResetPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPassOperationCompleted);
            }
            this.InvokeAsync("ResetPass", new object[] {
                        customerNo,
                        password}, this.ResetPassOperationCompleted, userState);
        }
        
        private void OnResetPassOperationCompleted(object arg) {
            if ((this.ResetPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPassCompleted(this, new ResetPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:SendNotMail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="SendNotMail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendNotMail() {
            this.Invoke("SendNotMail", new object[0]);
        }
        
        /// <remarks/>
        public void SendNotMailAsync() {
            this.SendNotMailAsync(null);
        }
        
        /// <remarks/>
        public void SendNotMailAsync(object userState) {
            if ((this.SendNotMailOperationCompleted == null)) {
                this.SendNotMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendNotMailOperationCompleted);
            }
            this.InvokeAsync("SendNotMail", new object[0], this.SendNotMailOperationCompleted, userState);
        }
        
        private void OnSendNotMailOperationCompleted(object arg) {
            if ((this.SendNotMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendNotMailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:CreateCommittee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="CreateCommittee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateCommittee(string committeeName, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string mandate) {
            object[] results = this.Invoke("CreateCommittee", new object[] {
                        committeeName,
                        startdate,
                        endDate,
                        mandate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCommitteeAsync(string committeeName, System.DateTime startdate, System.DateTime endDate, string mandate) {
            this.CreateCommitteeAsync(committeeName, startdate, endDate, mandate, null);
        }
        
        /// <remarks/>
        public void CreateCommitteeAsync(string committeeName, System.DateTime startdate, System.DateTime endDate, string mandate, object userState) {
            if ((this.CreateCommitteeOperationCompleted == null)) {
                this.CreateCommitteeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCommitteeOperationCompleted);
            }
            this.InvokeAsync("CreateCommittee", new object[] {
                        committeeName,
                        startdate,
                        endDate,
                        mandate}, this.CreateCommitteeOperationCompleted, userState);
        }
        
        private void OnCreateCommitteeOperationCompleted(object arg) {
            if ((this.CreateCommitteeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCommitteeCompleted(this, new CreateCommitteeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:InsertMember", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="InsertMember_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertMember(string committecode, string user, string designation) {
            this.Invoke("InsertMember", new object[] {
                        committecode,
                        user,
                        designation});
        }
        
        /// <remarks/>
        public void InsertMemberAsync(string committecode, string user, string designation) {
            this.InsertMemberAsync(committecode, user, designation, null);
        }
        
        /// <remarks/>
        public void InsertMemberAsync(string committecode, string user, string designation, object userState) {
            if ((this.InsertMemberOperationCompleted == null)) {
                this.InsertMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMemberOperationCompleted);
            }
            this.InvokeAsync("InsertMember", new object[] {
                        committecode,
                        user,
                        designation}, this.InsertMemberOperationCompleted, userState);
        }
        
        private void OnInsertMemberOperationCompleted(object arg) {
            if ((this.InsertMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMemberCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:GenerateDirectorPayslip", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="GenerateDirectorPayslip_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerateDirectorPayslip(string director, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime payperiod) {
            this.Invoke("GenerateDirectorPayslip", new object[] {
                        director,
                        payperiod});
        }
        
        /// <remarks/>
        public void GenerateDirectorPayslipAsync(string director, System.DateTime payperiod) {
            this.GenerateDirectorPayslipAsync(director, payperiod, null);
        }
        
        /// <remarks/>
        public void GenerateDirectorPayslipAsync(string director, System.DateTime payperiod, object userState) {
            if ((this.GenerateDirectorPayslipOperationCompleted == null)) {
                this.GenerateDirectorPayslipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDirectorPayslipOperationCompleted);
            }
            this.InvokeAsync("GenerateDirectorPayslip", new object[] {
                        director,
                        payperiod}, this.GenerateDirectorPayslipOperationCompleted, userState);
        }
        
        private void OnGenerateDirectorPayslipOperationCompleted(object arg) {
            if ((this.GenerateDirectorPayslipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDirectorPayslipCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:Vote", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="Vote_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Vote(string voteitem, string user, int decision) {
            object[] results = this.Invoke("Vote", new object[] {
                        voteitem,
                        user,
                        decision});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VoteAsync(string voteitem, string user, int decision) {
            this.VoteAsync(voteitem, user, decision, null);
        }
        
        /// <remarks/>
        public void VoteAsync(string voteitem, string user, int decision, object userState) {
            if ((this.VoteOperationCompleted == null)) {
                this.VoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVoteOperationCompleted);
            }
            this.InvokeAsync("Vote", new object[] {
                        voteitem,
                        user,
                        decision}, this.VoteOperationCompleted, userState);
        }
        
        private void OnVoteOperationCompleted(object arg) {
            if ((this.VoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VoteCompleted(this, new VoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:Register", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="Register_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Register(string surname, string midddlename, string othername, string nationality, string passporta47idnumber, string nameoffirm, string pobox, string postcode, string emailaddress) {
            object[] results = this.Invoke("Register", new object[] {
                        surname,
                        midddlename,
                        othername,
                        nationality,
                        passporta47idnumber,
                        nameoffirm,
                        pobox,
                        postcode,
                        emailaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAsync(string surname, string midddlename, string othername, string nationality, string passporta47idnumber, string nameoffirm, string pobox, string postcode, string emailaddress) {
            this.RegisterAsync(surname, midddlename, othername, nationality, passporta47idnumber, nameoffirm, pobox, postcode, emailaddress, null);
        }
        
        /// <remarks/>
        public void RegisterAsync(string surname, string midddlename, string othername, string nationality, string passporta47idnumber, string nameoffirm, string pobox, string postcode, string emailaddress, object userState) {
            if ((this.RegisterOperationCompleted == null)) {
                this.RegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOperationCompleted);
            }
            this.InvokeAsync("Register", new object[] {
                        surname,
                        midddlename,
                        othername,
                        nationality,
                        passporta47idnumber,
                        nameoffirm,
                        pobox,
                        postcode,
                        emailaddress}, this.RegisterOperationCompleted, userState);
        }
        
        private void OnRegisterOperationCompleted(object arg) {
            if ((this.RegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:AddLanguage", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="AddLanguage_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool AddLanguage(string customerCode, string languagCode) {
            object[] results = this.Invoke("AddLanguage", new object[] {
                        customerCode,
                        languagCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddLanguageAsync(string customerCode, string languagCode) {
            this.AddLanguageAsync(customerCode, languagCode, null);
        }
        
        /// <remarks/>
        public void AddLanguageAsync(string customerCode, string languagCode, object userState) {
            if ((this.AddLanguageOperationCompleted == null)) {
                this.AddLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLanguageOperationCompleted);
            }
            this.InvokeAsync("AddLanguage", new object[] {
                        customerCode,
                        languagCode}, this.AddLanguageOperationCompleted, userState);
        }
        
        private void OnAddLanguageOperationCompleted(object arg) {
            if ((this.AddLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLanguageCompleted(this, new AddLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:AccreditationApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="AccreditationApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AccreditationApplication(string customerNo, int level, string paymentRef) {
            object[] results = this.Invoke("AccreditationApplication", new object[] {
                        customerNo,
                        level,
                        paymentRef});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AccreditationApplicationAsync(string customerNo, int level, string paymentRef) {
            this.AccreditationApplicationAsync(customerNo, level, paymentRef, null);
        }
        
        /// <remarks/>
        public void AccreditationApplicationAsync(string customerNo, int level, string paymentRef, object userState) {
            if ((this.AccreditationApplicationOperationCompleted == null)) {
                this.AccreditationApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccreditationApplicationOperationCompleted);
            }
            this.InvokeAsync("AccreditationApplication", new object[] {
                        customerNo,
                        level,
                        paymentRef}, this.AccreditationApplicationOperationCompleted, userState);
        }
        
        private void OnAccreditationApplicationOperationCompleted(object arg) {
            if ((this.AccreditationApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccreditationApplicationCompleted(this, new AccreditationApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:Rfastep1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="Rfastep1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Rfastep1(string rfaNo, string customerNo, string legalRepName, string legalRepEmail, string legalRepAddress, string legalRepTelephone) {
            object[] results = this.Invoke("Rfastep1", new object[] {
                        rfaNo,
                        customerNo,
                        legalRepName,
                        legalRepEmail,
                        legalRepAddress,
                        legalRepTelephone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Rfastep1Async(string rfaNo, string customerNo, string legalRepName, string legalRepEmail, string legalRepAddress, string legalRepTelephone) {
            this.Rfastep1Async(rfaNo, customerNo, legalRepName, legalRepEmail, legalRepAddress, legalRepTelephone, null);
        }
        
        /// <remarks/>
        public void Rfastep1Async(string rfaNo, string customerNo, string legalRepName, string legalRepEmail, string legalRepAddress, string legalRepTelephone, object userState) {
            if ((this.Rfastep1OperationCompleted == null)) {
                this.Rfastep1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRfastep1OperationCompleted);
            }
            this.InvokeAsync("Rfastep1", new object[] {
                        rfaNo,
                        customerNo,
                        legalRepName,
                        legalRepEmail,
                        legalRepAddress,
                        legalRepTelephone}, this.Rfastep1OperationCompleted, userState);
        }
        
        private void OnRfastep1OperationCompleted(object arg) {
            if ((this.Rfastep1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Rfastep1Completed(this, new Rfastep1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:Rfastep2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="Rfastep2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Rfastep2(string customerNo, string rfa, string respondentName, string respondentTelephone, string respondentEmail, string respondentCountry, string respondentPostCode, string respondentAddress, string respondentCity, string respondentPhysicalLocation, string respondentlegalRepName, string respondentLegalRepEmail, string respondentLegalrepAddress, string respondentLegalRepTelephone) {
            object[] results = this.Invoke("Rfastep2", new object[] {
                        customerNo,
                        rfa,
                        respondentName,
                        respondentTelephone,
                        respondentEmail,
                        respondentCountry,
                        respondentPostCode,
                        respondentAddress,
                        respondentCity,
                        respondentPhysicalLocation,
                        respondentlegalRepName,
                        respondentLegalRepEmail,
                        respondentLegalrepAddress,
                        respondentLegalRepTelephone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Rfastep2Async(string customerNo, string rfa, string respondentName, string respondentTelephone, string respondentEmail, string respondentCountry, string respondentPostCode, string respondentAddress, string respondentCity, string respondentPhysicalLocation, string respondentlegalRepName, string respondentLegalRepEmail, string respondentLegalrepAddress, string respondentLegalRepTelephone) {
            this.Rfastep2Async(customerNo, rfa, respondentName, respondentTelephone, respondentEmail, respondentCountry, respondentPostCode, respondentAddress, respondentCity, respondentPhysicalLocation, respondentlegalRepName, respondentLegalRepEmail, respondentLegalrepAddress, respondentLegalRepTelephone, null);
        }
        
        /// <remarks/>
        public void Rfastep2Async(string customerNo, string rfa, string respondentName, string respondentTelephone, string respondentEmail, string respondentCountry, string respondentPostCode, string respondentAddress, string respondentCity, string respondentPhysicalLocation, string respondentlegalRepName, string respondentLegalRepEmail, string respondentLegalrepAddress, string respondentLegalRepTelephone, object userState) {
            if ((this.Rfastep2OperationCompleted == null)) {
                this.Rfastep2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRfastep2OperationCompleted);
            }
            this.InvokeAsync("Rfastep2", new object[] {
                        customerNo,
                        rfa,
                        respondentName,
                        respondentTelephone,
                        respondentEmail,
                        respondentCountry,
                        respondentPostCode,
                        respondentAddress,
                        respondentCity,
                        respondentPhysicalLocation,
                        respondentlegalRepName,
                        respondentLegalRepEmail,
                        respondentLegalrepAddress,
                        respondentLegalRepTelephone}, this.Rfastep2OperationCompleted, userState);
        }
        
        private void OnRfastep2OperationCompleted(object arg) {
            if ((this.Rfastep2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Rfastep2Completed(this, new Rfastep2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:Rfastep3", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="Rfastep3_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Rfastep3(string rfaNo, string customerNo, string arbitratorName, string arbitratorPostCode, string arbitratorTelephone, string arbitratorAddress, string arbitratorEmail, string arbitratorCity, string arbitratorCountry, string arbitratorPhysicalLocation) {
            object[] results = this.Invoke("Rfastep3", new object[] {
                        rfaNo,
                        customerNo,
                        arbitratorName,
                        arbitratorPostCode,
                        arbitratorTelephone,
                        arbitratorAddress,
                        arbitratorEmail,
                        arbitratorCity,
                        arbitratorCountry,
                        arbitratorPhysicalLocation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Rfastep3Async(string rfaNo, string customerNo, string arbitratorName, string arbitratorPostCode, string arbitratorTelephone, string arbitratorAddress, string arbitratorEmail, string arbitratorCity, string arbitratorCountry, string arbitratorPhysicalLocation) {
            this.Rfastep3Async(rfaNo, customerNo, arbitratorName, arbitratorPostCode, arbitratorTelephone, arbitratorAddress, arbitratorEmail, arbitratorCity, arbitratorCountry, arbitratorPhysicalLocation, null);
        }
        
        /// <remarks/>
        public void Rfastep3Async(string rfaNo, string customerNo, string arbitratorName, string arbitratorPostCode, string arbitratorTelephone, string arbitratorAddress, string arbitratorEmail, string arbitratorCity, string arbitratorCountry, string arbitratorPhysicalLocation, object userState) {
            if ((this.Rfastep3OperationCompleted == null)) {
                this.Rfastep3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRfastep3OperationCompleted);
            }
            this.InvokeAsync("Rfastep3", new object[] {
                        rfaNo,
                        customerNo,
                        arbitratorName,
                        arbitratorPostCode,
                        arbitratorTelephone,
                        arbitratorAddress,
                        arbitratorEmail,
                        arbitratorCity,
                        arbitratorCountry,
                        arbitratorPhysicalLocation}, this.Rfastep3OperationCompleted, userState);
        }
        
        private void OnRfastep3OperationCompleted(object arg) {
            if ((this.Rfastep3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Rfastep3Completed(this, new Rfastep3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:Rfastep4", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="Rfastep4_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Rfastep4(string customerNo, string rfaNo, string paymentRef, string receiptLocation) {
            object[] results = this.Invoke("Rfastep4", new object[] {
                        customerNo,
                        rfaNo,
                        paymentRef,
                        receiptLocation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Rfastep4Async(string customerNo, string rfaNo, string paymentRef, string receiptLocation) {
            this.Rfastep4Async(customerNo, rfaNo, paymentRef, receiptLocation, null);
        }
        
        /// <remarks/>
        public void Rfastep4Async(string customerNo, string rfaNo, string paymentRef, string receiptLocation, object userState) {
            if ((this.Rfastep4OperationCompleted == null)) {
                this.Rfastep4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRfastep4OperationCompleted);
            }
            this.InvokeAsync("Rfastep4", new object[] {
                        customerNo,
                        rfaNo,
                        paymentRef,
                        receiptLocation}, this.Rfastep4OperationCompleted, userState);
        }
        
        private void OnRfastep4OperationCompleted(object arg) {
            if ((this.Rfastep4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Rfastep4Completed(this, new Rfastep4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:Savegeneraldetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="Savegeneraldetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Savegeneraldetails(string customerNo, string nationality1, string nationality2, string idnumber, string nameoffirm, string primaryocuupation, decimal yearsofarbitration, decimal yearsofmediation, string accreditationparticulars, bool fulltimejob) {
            object[] results = this.Invoke("Savegeneraldetails", new object[] {
                        customerNo,
                        nationality1,
                        nationality2,
                        idnumber,
                        nameoffirm,
                        primaryocuupation,
                        yearsofarbitration,
                        yearsofmediation,
                        accreditationparticulars,
                        fulltimejob});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SavegeneraldetailsAsync(string customerNo, string nationality1, string nationality2, string idnumber, string nameoffirm, string primaryocuupation, decimal yearsofarbitration, decimal yearsofmediation, string accreditationparticulars, bool fulltimejob) {
            this.SavegeneraldetailsAsync(customerNo, nationality1, nationality2, idnumber, nameoffirm, primaryocuupation, yearsofarbitration, yearsofmediation, accreditationparticulars, fulltimejob, null);
        }
        
        /// <remarks/>
        public void SavegeneraldetailsAsync(string customerNo, string nationality1, string nationality2, string idnumber, string nameoffirm, string primaryocuupation, decimal yearsofarbitration, decimal yearsofmediation, string accreditationparticulars, bool fulltimejob, object userState) {
            if ((this.SavegeneraldetailsOperationCompleted == null)) {
                this.SavegeneraldetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavegeneraldetailsOperationCompleted);
            }
            this.InvokeAsync("Savegeneraldetails", new object[] {
                        customerNo,
                        nationality1,
                        nationality2,
                        idnumber,
                        nameoffirm,
                        primaryocuupation,
                        yearsofarbitration,
                        yearsofmediation,
                        accreditationparticulars,
                        fulltimejob}, this.SavegeneraldetailsOperationCompleted, userState);
        }
        
        private void OnSavegeneraldetailsOperationCompleted(object arg) {
            if ((this.SavegeneraldetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavegeneraldetailsCompleted(this, new SavegeneraldetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:SaveExperience", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="SaveExperience_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SaveExperience(string customerNo, string role, string sector, decimal number_of_Mediations, string description) {
            object[] results = this.Invoke("SaveExperience", new object[] {
                        customerNo,
                        role,
                        sector,
                        number_of_Mediations,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveExperienceAsync(string customerNo, string role, string sector, decimal number_of_Mediations, string description) {
            this.SaveExperienceAsync(customerNo, role, sector, number_of_Mediations, description, null);
        }
        
        /// <remarks/>
        public void SaveExperienceAsync(string customerNo, string role, string sector, decimal number_of_Mediations, string description, object userState) {
            if ((this.SaveExperienceOperationCompleted == null)) {
                this.SaveExperienceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveExperienceOperationCompleted);
            }
            this.InvokeAsync("SaveExperience", new object[] {
                        customerNo,
                        role,
                        sector,
                        number_of_Mediations,
                        description}, this.SaveExperienceOperationCompleted, userState);
        }
        
        private void OnSaveExperienceOperationCompleted(object arg) {
            if ((this.SaveExperienceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveExperienceCompleted(this, new SaveExperienceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:SaveAcademicTraining", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="SaveAcademicTraining_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SaveAcademicTraining(string customerNo, string qualification, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate, string institution, string description, string comment, string trainingrole) {
            object[] results = this.Invoke("SaveAcademicTraining", new object[] {
                        customerNo,
                        qualification,
                        fromDate,
                        toDate,
                        institution,
                        description,
                        comment,
                        trainingrole});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAcademicTrainingAsync(string customerNo, string qualification, System.DateTime fromDate, System.DateTime toDate, string institution, string description, string comment, string trainingrole) {
            this.SaveAcademicTrainingAsync(customerNo, qualification, fromDate, toDate, institution, description, comment, trainingrole, null);
        }
        
        /// <remarks/>
        public void SaveAcademicTrainingAsync(string customerNo, string qualification, System.DateTime fromDate, System.DateTime toDate, string institution, string description, string comment, string trainingrole, object userState) {
            if ((this.SaveAcademicTrainingOperationCompleted == null)) {
                this.SaveAcademicTrainingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAcademicTrainingOperationCompleted);
            }
            this.InvokeAsync("SaveAcademicTraining", new object[] {
                        customerNo,
                        qualification,
                        fromDate,
                        toDate,
                        institution,
                        description,
                        comment,
                        trainingrole}, this.SaveAcademicTrainingOperationCompleted, userState);
        }
        
        private void OnSaveAcademicTrainingOperationCompleted(object arg) {
            if ((this.SaveAcademicTrainingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAcademicTrainingCompleted(this, new SaveAcademicTrainingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:Rfmstep1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="Rfmstep1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Rfmstep1(string claimantName, string postAddress, string postCode, string city, string country, string email, string mobile, string telephone, string customerNo) {
            object[] results = this.Invoke("Rfmstep1", new object[] {
                        claimantName,
                        postAddress,
                        postCode,
                        city,
                        country,
                        email,
                        mobile,
                        telephone,
                        customerNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Rfmstep1Async(string claimantName, string postAddress, string postCode, string city, string country, string email, string mobile, string telephone, string customerNo) {
            this.Rfmstep1Async(claimantName, postAddress, postCode, city, country, email, mobile, telephone, customerNo, null);
        }
        
        /// <remarks/>
        public void Rfmstep1Async(string claimantName, string postAddress, string postCode, string city, string country, string email, string mobile, string telephone, string customerNo, object userState) {
            if ((this.Rfmstep1OperationCompleted == null)) {
                this.Rfmstep1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRfmstep1OperationCompleted);
            }
            this.InvokeAsync("Rfmstep1", new object[] {
                        claimantName,
                        postAddress,
                        postCode,
                        city,
                        country,
                        email,
                        mobile,
                        telephone,
                        customerNo}, this.Rfmstep1OperationCompleted, userState);
        }
        
        private void OnRfmstep1OperationCompleted(object arg) {
            if ((this.Rfmstep1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Rfmstep1Completed(this, new Rfmstep1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:Rfmstep2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="Rfmstep2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Rfmstep2(string respondentName, string postAddress, string postCode, string city, string country, string email, string mobile, string telephone, string customerNo) {
            object[] results = this.Invoke("Rfmstep2", new object[] {
                        respondentName,
                        postAddress,
                        postCode,
                        city,
                        country,
                        email,
                        mobile,
                        telephone,
                        customerNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Rfmstep2Async(string respondentName, string postAddress, string postCode, string city, string country, string email, string mobile, string telephone, string customerNo) {
            this.Rfmstep2Async(respondentName, postAddress, postCode, city, country, email, mobile, telephone, customerNo, null);
        }
        
        /// <remarks/>
        public void Rfmstep2Async(string respondentName, string postAddress, string postCode, string city, string country, string email, string mobile, string telephone, string customerNo, object userState) {
            if ((this.Rfmstep2OperationCompleted == null)) {
                this.Rfmstep2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRfmstep2OperationCompleted);
            }
            this.InvokeAsync("Rfmstep2", new object[] {
                        respondentName,
                        postAddress,
                        postCode,
                        city,
                        country,
                        email,
                        mobile,
                        telephone,
                        customerNo}, this.Rfmstep2OperationCompleted, userState);
        }
        
        private void OnRfmstep2OperationCompleted(object arg) {
            if ((this.Rfmstep2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Rfmstep2Completed(this, new Rfmstep2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:Rfmstep3", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="Rfmstep3_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Rfmstep3() {
            this.Invoke("Rfmstep3", new object[0]);
        }
        
        /// <remarks/>
        public void Rfmstep3Async() {
            this.Rfmstep3Async(null);
        }
        
        /// <remarks/>
        public void Rfmstep3Async(object userState) {
            if ((this.Rfmstep3OperationCompleted == null)) {
                this.Rfmstep3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRfmstep3OperationCompleted);
            }
            this.InvokeAsync("Rfmstep3", new object[0], this.Rfmstep3OperationCompleted, userState);
        }
        
        private void OnRfmstep3OperationCompleted(object arg) {
            if ((this.Rfmstep3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Rfmstep3Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:Rfmstep4", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="Rfmstep4_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Rfmstep4() {
            this.Invoke("Rfmstep4", new object[0]);
        }
        
        /// <remarks/>
        public void Rfmstep4Async() {
            this.Rfmstep4Async(null);
        }
        
        /// <remarks/>
        public void Rfmstep4Async(object userState) {
            if ((this.Rfmstep4OperationCompleted == null)) {
                this.Rfmstep4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRfmstep4OperationCompleted);
            }
            this.InvokeAsync("Rfmstep4", new object[0], this.Rfmstep4OperationCompleted, userState);
        }
        
        private void OnRfmstep4OperationCompleted(object arg) {
            if ((this.Rfmstep4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Rfmstep4Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:AccreditationRenewal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="AccreditationRenewal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AccreditationRenewal(string customerNo, string accreditationNumber, string paymentRef) {
            object[] results = this.Invoke("AccreditationRenewal", new object[] {
                        customerNo,
                        accreditationNumber,
                        paymentRef});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AccreditationRenewalAsync(string customerNo, string accreditationNumber, string paymentRef) {
            this.AccreditationRenewalAsync(customerNo, accreditationNumber, paymentRef, null);
        }
        
        /// <remarks/>
        public void AccreditationRenewalAsync(string customerNo, string accreditationNumber, string paymentRef, object userState) {
            if ((this.AccreditationRenewalOperationCompleted == null)) {
                this.AccreditationRenewalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccreditationRenewalOperationCompleted);
            }
            this.InvokeAsync("AccreditationRenewal", new object[] {
                        customerNo,
                        accreditationNumber,
                        paymentRef}, this.AccreditationRenewalOperationCompleted, userState);
        }
        
        private void OnAccreditationRenewalOperationCompleted(object arg) {
            if ((this.AccreditationRenewalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccreditationRenewalCompleted(this, new AccreditationRenewalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:AddOtherParty", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="AddOtherParty_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddOtherParty(string rfaNo, string customerNo, string role, string name, string address, string postCode, string country, string telephone, string email) {
            object[] results = this.Invoke("AddOtherParty", new object[] {
                        rfaNo,
                        customerNo,
                        role,
                        name,
                        address,
                        postCode,
                        country,
                        telephone,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddOtherPartyAsync(string rfaNo, string customerNo, string role, string name, string address, string postCode, string country, string telephone, string email) {
            this.AddOtherPartyAsync(rfaNo, customerNo, role, name, address, postCode, country, telephone, email, null);
        }
        
        /// <remarks/>
        public void AddOtherPartyAsync(string rfaNo, string customerNo, string role, string name, string address, string postCode, string country, string telephone, string email, object userState) {
            if ((this.AddOtherPartyOperationCompleted == null)) {
                this.AddOtherPartyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOtherPartyOperationCompleted);
            }
            this.InvokeAsync("AddOtherParty", new object[] {
                        rfaNo,
                        customerNo,
                        role,
                        name,
                        address,
                        postCode,
                        country,
                        telephone,
                        email}, this.AddOtherPartyOperationCompleted, userState);
        }
        
        private void OnAddOtherPartyOperationCompleted(object arg) {
            if ((this.AddOtherPartyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOtherPartyCompleted(this, new AddOtherPartyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:Verify", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="Verify_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Verify(string rfmNo, string passkey, string customerNo) {
            object[] results = this.Invoke("Verify", new object[] {
                        rfmNo,
                        passkey,
                        customerNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyAsync(string rfmNo, string passkey, string customerNo) {
            this.VerifyAsync(rfmNo, passkey, customerNo, null);
        }
        
        /// <remarks/>
        public void VerifyAsync(string rfmNo, string passkey, string customerNo, object userState) {
            if ((this.VerifyOperationCompleted == null)) {
                this.VerifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyOperationCompleted);
            }
            this.InvokeAsync("Verify", new object[] {
                        rfmNo,
                        passkey,
                        customerNo}, this.VerifyOperationCompleted, userState);
        }
        
        private void OnVerifyOperationCompleted(object arg) {
            if ((this.VerifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyCompleted(this, new VerifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:RfaGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="RfaGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RfaGeneralDetails(
                    string rfaNo, 
                    string arbitrationType, 
                    string arbitrationCluster, 
                    string disputeTitle, 
                    string currency, 
                    decimal amountInDispute, 
                    string natureOfBusiness, 
                    string languageOfArbitration, 
                    string industryClassification, 
                    string arbitralSeat, 
                    string briefClaimantStatement, 
                    string circumstanceOfDispute, 
                    string legalBasisofClaim, 
                    string claimantDamagesSummary, 
                    string summaryofReliefSought, 
                    string disputeResolutionClause, 
                    string user) {
            object[] results = this.Invoke("RfaGeneralDetails", new object[] {
                        rfaNo,
                        arbitrationType,
                        arbitrationCluster,
                        disputeTitle,
                        currency,
                        amountInDispute,
                        natureOfBusiness,
                        languageOfArbitration,
                        industryClassification,
                        arbitralSeat,
                        briefClaimantStatement,
                        circumstanceOfDispute,
                        legalBasisofClaim,
                        claimantDamagesSummary,
                        summaryofReliefSought,
                        disputeResolutionClause,
                        user});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RfaGeneralDetailsAsync(
                    string rfaNo, 
                    string arbitrationType, 
                    string arbitrationCluster, 
                    string disputeTitle, 
                    string currency, 
                    decimal amountInDispute, 
                    string natureOfBusiness, 
                    string languageOfArbitration, 
                    string industryClassification, 
                    string arbitralSeat, 
                    string briefClaimantStatement, 
                    string circumstanceOfDispute, 
                    string legalBasisofClaim, 
                    string claimantDamagesSummary, 
                    string summaryofReliefSought, 
                    string disputeResolutionClause, 
                    string user) {
            this.RfaGeneralDetailsAsync(rfaNo, arbitrationType, arbitrationCluster, disputeTitle, currency, amountInDispute, natureOfBusiness, languageOfArbitration, industryClassification, arbitralSeat, briefClaimantStatement, circumstanceOfDispute, legalBasisofClaim, claimantDamagesSummary, summaryofReliefSought, disputeResolutionClause, user, null);
        }
        
        /// <remarks/>
        public void RfaGeneralDetailsAsync(
                    string rfaNo, 
                    string arbitrationType, 
                    string arbitrationCluster, 
                    string disputeTitle, 
                    string currency, 
                    decimal amountInDispute, 
                    string natureOfBusiness, 
                    string languageOfArbitration, 
                    string industryClassification, 
                    string arbitralSeat, 
                    string briefClaimantStatement, 
                    string circumstanceOfDispute, 
                    string legalBasisofClaim, 
                    string claimantDamagesSummary, 
                    string summaryofReliefSought, 
                    string disputeResolutionClause, 
                    string user, 
                    object userState) {
            if ((this.RfaGeneralDetailsOperationCompleted == null)) {
                this.RfaGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRfaGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("RfaGeneralDetails", new object[] {
                        rfaNo,
                        arbitrationType,
                        arbitrationCluster,
                        disputeTitle,
                        currency,
                        amountInDispute,
                        natureOfBusiness,
                        languageOfArbitration,
                        industryClassification,
                        arbitralSeat,
                        briefClaimantStatement,
                        circumstanceOfDispute,
                        legalBasisofClaim,
                        claimantDamagesSummary,
                        summaryofReliefSought,
                        disputeResolutionClause,
                        user}, this.RfaGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnRfaGeneralDetailsOperationCompleted(object arg) {
            if ((this.RfaGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RfaGeneralDetailsCompleted(this, new RfaGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:GetCustomerPhoto", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="GetCustomerPhoto_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCustomerPhoto(string customerNo) {
            object[] results = this.Invoke("GetCustomerPhoto", new object[] {
                        customerNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerPhotoAsync(string customerNo) {
            this.GetCustomerPhotoAsync(customerNo, null);
        }
        
        /// <remarks/>
        public void GetCustomerPhotoAsync(string customerNo, object userState) {
            if ((this.GetCustomerPhotoOperationCompleted == null)) {
                this.GetCustomerPhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerPhotoOperationCompleted);
            }
            this.InvokeAsync("GetCustomerPhoto", new object[] {
                        customerNo}, this.GetCustomerPhotoOperationCompleted, userState);
        }
        
        private void OnGetCustomerPhotoOperationCompleted(object arg) {
            if ((this.GetCustomerPhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerPhotoCompleted(this, new GetCustomerPhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:GetBlob", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="GetBlob_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetBlob(int field, string rfA) {
            object[] results = this.Invoke("GetBlob", new object[] {
                        field,
                        rfA});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBlobAsync(int field, string rfA) {
            this.GetBlobAsync(field, rfA, null);
        }
        
        /// <remarks/>
        public void GetBlobAsync(int field, string rfA, object userState) {
            if ((this.GetBlobOperationCompleted == null)) {
                this.GetBlobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlobOperationCompleted);
            }
            this.InvokeAsync("GetBlob", new object[] {
                        field,
                        rfA}, this.GetBlobOperationCompleted, userState);
        }
        
        private void OnGetBlobOperationCompleted(object arg) {
            if ((this.GetBlobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlobCompleted(this, new GetBlobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:PrintRfa", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="PrintRfa_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintRfa(string rfaNo) {
            object[] results = this.Invoke("PrintRfa", new object[] {
                        rfaNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintRfaAsync(string rfaNo) {
            this.PrintRfaAsync(rfaNo, null);
        }
        
        /// <remarks/>
        public void PrintRfaAsync(string rfaNo, object userState) {
            if ((this.PrintRfaOperationCompleted == null)) {
                this.PrintRfaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintRfaOperationCompleted);
            }
            this.InvokeAsync("PrintRfa", new object[] {
                        rfaNo}, this.PrintRfaOperationCompleted, userState);
        }
        
        private void OnPrintRfaOperationCompleted(object arg) {
            if ((this.PrintRfaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintRfaCompleted(this, new PrintRfaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:ResponseStep1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="ResponseStep1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ResponseStep1(string responseCode, string customerNo, string respondentDecision, string briefCounterClaim, string responseToRfa, string currency, decimal respondentLoss, string natureOfBusiness, string generalComments, string languageOfArbitration, string arbitralSeat, string venue) {
            object[] results = this.Invoke("ResponseStep1", new object[] {
                        responseCode,
                        customerNo,
                        respondentDecision,
                        briefCounterClaim,
                        responseToRfa,
                        currency,
                        respondentLoss,
                        natureOfBusiness,
                        generalComments,
                        languageOfArbitration,
                        arbitralSeat,
                        venue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResponseStep1Async(string responseCode, string customerNo, string respondentDecision, string briefCounterClaim, string responseToRfa, string currency, decimal respondentLoss, string natureOfBusiness, string generalComments, string languageOfArbitration, string arbitralSeat, string venue) {
            this.ResponseStep1Async(responseCode, customerNo, respondentDecision, briefCounterClaim, responseToRfa, currency, respondentLoss, natureOfBusiness, generalComments, languageOfArbitration, arbitralSeat, venue, null);
        }
        
        /// <remarks/>
        public void ResponseStep1Async(string responseCode, string customerNo, string respondentDecision, string briefCounterClaim, string responseToRfa, string currency, decimal respondentLoss, string natureOfBusiness, string generalComments, string languageOfArbitration, string arbitralSeat, string venue, object userState) {
            if ((this.ResponseStep1OperationCompleted == null)) {
                this.ResponseStep1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnResponseStep1OperationCompleted);
            }
            this.InvokeAsync("ResponseStep1", new object[] {
                        responseCode,
                        customerNo,
                        respondentDecision,
                        briefCounterClaim,
                        responseToRfa,
                        currency,
                        respondentLoss,
                        natureOfBusiness,
                        generalComments,
                        languageOfArbitration,
                        arbitralSeat,
                        venue}, this.ResponseStep1OperationCompleted, userState);
        }
        
        private void OnResponseStep1OperationCompleted(object arg) {
            if ((this.ResponseStep1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResponseStep1Completed(this, new ResponseStep1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:ResponseStep2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="ResponseStep2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ResponseStep2(string responseCode, string customerCode, string respondentType, string respondentName, string respondentEmail, string respondentTelephone, string respondentPhysicalLocation, string respondentAddress, string respondentPostCode, string respondentCity, string respondentCountry) {
            object[] results = this.Invoke("ResponseStep2", new object[] {
                        responseCode,
                        customerCode,
                        respondentType,
                        respondentName,
                        respondentEmail,
                        respondentTelephone,
                        respondentPhysicalLocation,
                        respondentAddress,
                        respondentPostCode,
                        respondentCity,
                        respondentCountry});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResponseStep2Async(string responseCode, string customerCode, string respondentType, string respondentName, string respondentEmail, string respondentTelephone, string respondentPhysicalLocation, string respondentAddress, string respondentPostCode, string respondentCity, string respondentCountry) {
            this.ResponseStep2Async(responseCode, customerCode, respondentType, respondentName, respondentEmail, respondentTelephone, respondentPhysicalLocation, respondentAddress, respondentPostCode, respondentCity, respondentCountry, null);
        }
        
        /// <remarks/>
        public void ResponseStep2Async(string responseCode, string customerCode, string respondentType, string respondentName, string respondentEmail, string respondentTelephone, string respondentPhysicalLocation, string respondentAddress, string respondentPostCode, string respondentCity, string respondentCountry, object userState) {
            if ((this.ResponseStep2OperationCompleted == null)) {
                this.ResponseStep2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnResponseStep2OperationCompleted);
            }
            this.InvokeAsync("ResponseStep2", new object[] {
                        responseCode,
                        customerCode,
                        respondentType,
                        respondentName,
                        respondentEmail,
                        respondentTelephone,
                        respondentPhysicalLocation,
                        respondentAddress,
                        respondentPostCode,
                        respondentCity,
                        respondentCountry}, this.ResponseStep2OperationCompleted, userState);
        }
        
        private void OnResponseStep2OperationCompleted(object arg) {
            if ((this.ResponseStep2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResponseStep2Completed(this, new ResponseStep2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:ResponseStep3", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="ResponseStep3_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ResponseStep3(string responseCode, string customerCode, string legalRepName, string legalRepEmail, string legalRepAddress, string legalRepTelephone) {
            object[] results = this.Invoke("ResponseStep3", new object[] {
                        responseCode,
                        customerCode,
                        legalRepName,
                        legalRepEmail,
                        legalRepAddress,
                        legalRepTelephone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResponseStep3Async(string responseCode, string customerCode, string legalRepName, string legalRepEmail, string legalRepAddress, string legalRepTelephone) {
            this.ResponseStep3Async(responseCode, customerCode, legalRepName, legalRepEmail, legalRepAddress, legalRepTelephone, null);
        }
        
        /// <remarks/>
        public void ResponseStep3Async(string responseCode, string customerCode, string legalRepName, string legalRepEmail, string legalRepAddress, string legalRepTelephone, object userState) {
            if ((this.ResponseStep3OperationCompleted == null)) {
                this.ResponseStep3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnResponseStep3OperationCompleted);
            }
            this.InvokeAsync("ResponseStep3", new object[] {
                        responseCode,
                        customerCode,
                        legalRepName,
                        legalRepEmail,
                        legalRepAddress,
                        legalRepTelephone}, this.ResponseStep3OperationCompleted, userState);
        }
        
        private void OnResponseStep3OperationCompleted(object arg) {
            if ((this.ResponseStep3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResponseStep3Completed(this, new ResponseStep3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:ResponseStep4", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="ResponseStep4_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ResponseStep4(string responseCode, string customerCode, string respondentArbitratorName, string respondentArbitratorAddress, string respondentArbitratorPostCode, string respondentArbitratorCity, string respondentArbitratorPhysicalLocation, string respondentArbitratorCountry, string respondentArbitratorTelephone, string respondentArbitratorEmail) {
            object[] results = this.Invoke("ResponseStep4", new object[] {
                        responseCode,
                        customerCode,
                        respondentArbitratorName,
                        respondentArbitratorAddress,
                        respondentArbitratorPostCode,
                        respondentArbitratorCity,
                        respondentArbitratorPhysicalLocation,
                        respondentArbitratorCountry,
                        respondentArbitratorTelephone,
                        respondentArbitratorEmail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResponseStep4Async(string responseCode, string customerCode, string respondentArbitratorName, string respondentArbitratorAddress, string respondentArbitratorPostCode, string respondentArbitratorCity, string respondentArbitratorPhysicalLocation, string respondentArbitratorCountry, string respondentArbitratorTelephone, string respondentArbitratorEmail) {
            this.ResponseStep4Async(responseCode, customerCode, respondentArbitratorName, respondentArbitratorAddress, respondentArbitratorPostCode, respondentArbitratorCity, respondentArbitratorPhysicalLocation, respondentArbitratorCountry, respondentArbitratorTelephone, respondentArbitratorEmail, null);
        }
        
        /// <remarks/>
        public void ResponseStep4Async(string responseCode, string customerCode, string respondentArbitratorName, string respondentArbitratorAddress, string respondentArbitratorPostCode, string respondentArbitratorCity, string respondentArbitratorPhysicalLocation, string respondentArbitratorCountry, string respondentArbitratorTelephone, string respondentArbitratorEmail, object userState) {
            if ((this.ResponseStep4OperationCompleted == null)) {
                this.ResponseStep4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnResponseStep4OperationCompleted);
            }
            this.InvokeAsync("ResponseStep4", new object[] {
                        responseCode,
                        customerCode,
                        respondentArbitratorName,
                        respondentArbitratorAddress,
                        respondentArbitratorPostCode,
                        respondentArbitratorCity,
                        respondentArbitratorPhysicalLocation,
                        respondentArbitratorCountry,
                        respondentArbitratorTelephone,
                        respondentArbitratorEmail}, this.ResponseStep4OperationCompleted, userState);
        }
        
        private void OnResponseStep4OperationCompleted(object arg) {
            if ((this.ResponseStep4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResponseStep4Completed(this, new ResponseStep4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:PreviewResponse", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="PreviewResponse_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PreviewResponse(string responseCode) {
            object[] results = this.Invoke("PreviewResponse", new object[] {
                        responseCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PreviewResponseAsync(string responseCode) {
            this.PreviewResponseAsync(responseCode, null);
        }
        
        /// <remarks/>
        public void PreviewResponseAsync(string responseCode, object userState) {
            if ((this.PreviewResponseOperationCompleted == null)) {
                this.PreviewResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPreviewResponseOperationCompleted);
            }
            this.InvokeAsync("PreviewResponse", new object[] {
                        responseCode}, this.PreviewResponseOperationCompleted, userState);
        }
        
        private void OnPreviewResponseOperationCompleted(object arg) {
            if ((this.PreviewResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PreviewResponseCompleted(this, new PreviewResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:GetResponseBlob", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="GetResponseBlob_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetResponseBlob(int field, string rfA) {
            object[] results = this.Invoke("GetResponseBlob", new object[] {
                        field,
                        rfA});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetResponseBlobAsync(int field, string rfA) {
            this.GetResponseBlobAsync(field, rfA, null);
        }
        
        /// <remarks/>
        public void GetResponseBlobAsync(int field, string rfA, object userState) {
            if ((this.GetResponseBlobOperationCompleted == null)) {
                this.GetResponseBlobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResponseBlobOperationCompleted);
            }
            this.InvokeAsync("GetResponseBlob", new object[] {
                        field,
                        rfA}, this.GetResponseBlobOperationCompleted, userState);
        }
        
        private void OnGetResponseBlobOperationCompleted(object arg) {
            if ((this.GetResponseBlobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResponseBlobCompleted(this, new GetResponseBlobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:BookFacility", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="BookFacility_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string BookFacility(string customerCode, System.DateTime date) {
            object[] results = this.Invoke("BookFacility", new object[] {
                        customerCode,
                        date});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BookFacilityAsync(string customerCode, System.DateTime date) {
            this.BookFacilityAsync(customerCode, date, null);
        }
        
        /// <remarks/>
        public void BookFacilityAsync(string customerCode, System.DateTime date, object userState) {
            if ((this.BookFacilityOperationCompleted == null)) {
                this.BookFacilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookFacilityOperationCompleted);
            }
            this.InvokeAsync("BookFacility", new object[] {
                        customerCode,
                        date}, this.BookFacilityOperationCompleted, userState);
        }
        
        private void OnBookFacilityOperationCompleted(object arg) {
            if ((this.BookFacilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookFacilityCompleted(this, new BookFacilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:AddExtraServices", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="AddExtraServices_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool AddExtraServices(string salesHeaderCode, string customerCode, System.DateTime date, string service) {
            object[] results = this.Invoke("AddExtraServices", new object[] {
                        salesHeaderCode,
                        customerCode,
                        date,
                        service});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddExtraServicesAsync(string salesHeaderCode, string customerCode, System.DateTime date, string service) {
            this.AddExtraServicesAsync(salesHeaderCode, customerCode, date, service, null);
        }
        
        /// <remarks/>
        public void AddExtraServicesAsync(string salesHeaderCode, string customerCode, System.DateTime date, string service, object userState) {
            if ((this.AddExtraServicesOperationCompleted == null)) {
                this.AddExtraServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddExtraServicesOperationCompleted);
            }
            this.InvokeAsync("AddExtraServices", new object[] {
                        salesHeaderCode,
                        customerCode,
                        date,
                        service}, this.AddExtraServicesOperationCompleted, userState);
        }
        
        private void OnAddExtraServicesOperationCompleted(object arg) {
            if ((this.AddExtraServicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddExtraServicesCompleted(this, new AddExtraServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:SignupContact", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="SignupContact_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SignupContact(string name, string idnumber, string pinno, string physicallocation, string pObox, string postalcode, string emailaddress, string telephone, string mobileNo, int category) {
            object[] results = this.Invoke("SignupContact", new object[] {
                        name,
                        idnumber,
                        pinno,
                        physicallocation,
                        pObox,
                        postalcode,
                        emailaddress,
                        telephone,
                        mobileNo,
                        category});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SignupContactAsync(string name, string idnumber, string pinno, string physicallocation, string pObox, string postalcode, string emailaddress, string telephone, string mobileNo, int category) {
            this.SignupContactAsync(name, idnumber, pinno, physicallocation, pObox, postalcode, emailaddress, telephone, mobileNo, category, null);
        }
        
        /// <remarks/>
        public void SignupContactAsync(string name, string idnumber, string pinno, string physicallocation, string pObox, string postalcode, string emailaddress, string telephone, string mobileNo, int category, object userState) {
            if ((this.SignupContactOperationCompleted == null)) {
                this.SignupContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSignupContactOperationCompleted);
            }
            this.InvokeAsync("SignupContact", new object[] {
                        name,
                        idnumber,
                        pinno,
                        physicallocation,
                        pObox,
                        postalcode,
                        emailaddress,
                        telephone,
                        mobileNo,
                        category}, this.SignupContactOperationCompleted, userState);
        }
        
        private void OnSignupContactOperationCompleted(object arg) {
            if ((this.SignupContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SignupContactCompleted(this, new SignupContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:ForgotPass", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="ForgotPass_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ForgotPass(string registrationNo) {
            object[] results = this.Invoke("ForgotPass", new object[] {
                        registrationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ForgotPassAsync(string registrationNo) {
            this.ForgotPassAsync(registrationNo, null);
        }
        
        /// <remarks/>
        public void ForgotPassAsync(string registrationNo, object userState) {
            if ((this.ForgotPassOperationCompleted == null)) {
                this.ForgotPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForgotPassOperationCompleted);
            }
            this.InvokeAsync("ForgotPass", new object[] {
                        registrationNo}, this.ForgotPassOperationCompleted, userState);
        }
        
        private void OnForgotPassOperationCompleted(object arg) {
            if ((this.ForgotPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForgotPassCompleted(this, new ForgotPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:ChangePassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="ChangePassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ChangePassword(string customerNo, string currentPassword, string newPassword, string confirmNewPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        customerNo,
                        currentPassword,
                        newPassword,
                        confirmNewPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string customerNo, string currentPassword, string newPassword, string confirmNewPassword) {
            this.ChangePasswordAsync(customerNo, currentPassword, newPassword, confirmNewPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string customerNo, string currentPassword, string newPassword, string confirmNewPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        customerNo,
                        currentPassword,
                        newPassword,
                        confirmNewPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:PlaceBid", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="PlaceBid_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PlaceBid(string contact, string tenderNo, decimal bidAmount, bool regcert, bool pinCert, bool taxCompliance, bool vatCert, bool companyProfile, bool bidBondDoc, bool auditedBooks, bool tenderDoc) {
            object[] results = this.Invoke("PlaceBid", new object[] {
                        contact,
                        tenderNo,
                        bidAmount,
                        regcert,
                        pinCert,
                        taxCompliance,
                        vatCert,
                        companyProfile,
                        bidBondDoc,
                        auditedBooks,
                        tenderDoc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceBidAsync(string contact, string tenderNo, decimal bidAmount, bool regcert, bool pinCert, bool taxCompliance, bool vatCert, bool companyProfile, bool bidBondDoc, bool auditedBooks, bool tenderDoc) {
            this.PlaceBidAsync(contact, tenderNo, bidAmount, regcert, pinCert, taxCompliance, vatCert, companyProfile, bidBondDoc, auditedBooks, tenderDoc, null);
        }
        
        /// <remarks/>
        public void PlaceBidAsync(string contact, string tenderNo, decimal bidAmount, bool regcert, bool pinCert, bool taxCompliance, bool vatCert, bool companyProfile, bool bidBondDoc, bool auditedBooks, bool tenderDoc, object userState) {
            if ((this.PlaceBidOperationCompleted == null)) {
                this.PlaceBidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceBidOperationCompleted);
            }
            this.InvokeAsync("PlaceBid", new object[] {
                        contact,
                        tenderNo,
                        bidAmount,
                        regcert,
                        pinCert,
                        taxCompliance,
                        vatCert,
                        companyProfile,
                        bidBondDoc,
                        auditedBooks,
                        tenderDoc}, this.PlaceBidOperationCompleted, userState);
        }
        
        private void OnPlaceBidOperationCompleted(object arg) {
            if ((this.PlaceBidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceBidCompleted(this, new PlaceBidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:SendEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="SendEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendEmail(string recipient, string subject, string message) {
            this.Invoke("SendEmail", new object[] {
                        recipient,
                        subject,
                        message});
        }
        
        /// <remarks/>
        public void SendEmailAsync(string recipient, string subject, string message) {
            this.SendEmailAsync(recipient, subject, message, null);
        }
        
        /// <remarks/>
        public void SendEmailAsync(string recipient, string subject, string message, object userState) {
            if ((this.SendEmailOperationCompleted == null)) {
                this.SendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailOperationCompleted);
            }
            this.InvokeAsync("SendEmail", new object[] {
                        recipient,
                        subject,
                        message}, this.SendEmailOperationCompleted, userState);
        }
        
        private void OnSendEmailOperationCompleted(object arg) {
            if ((this.SendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:FnDeleteTestID", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="FnDeleteTestID_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnDeleteTestID(string idno) {
            object[] results = this.Invoke("FnDeleteTestID", new object[] {
                        idno});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteTestIDAsync(string idno) {
            this.FnDeleteTestIDAsync(idno, null);
        }
        
        /// <remarks/>
        public void FnDeleteTestIDAsync(string idno, object userState) {
            if ((this.FnDeleteTestIDOperationCompleted == null)) {
                this.FnDeleteTestIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteTestIDOperationCompleted);
            }
            this.InvokeAsync("FnDeleteTestID", new object[] {
                        idno}, this.FnDeleteTestIDOperationCompleted, userState);
        }
        
        private void OnFnDeleteTestIDOperationCompleted(object arg) {
            if ((this.FnDeleteTestIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteTestIDCompleted(this, new FnDeleteTestIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:FnIForgotMyPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="FnIForgotMyPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnIForgotMyPassword(string customerNo, string resetPasswordIs) {
            object[] results = this.Invoke("FnIForgotMyPassword", new object[] {
                        customerNo,
                        resetPasswordIs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnIForgotMyPasswordAsync(string customerNo, string resetPasswordIs) {
            this.FnIForgotMyPasswordAsync(customerNo, resetPasswordIs, null);
        }
        
        /// <remarks/>
        public void FnIForgotMyPasswordAsync(string customerNo, string resetPasswordIs, object userState) {
            if ((this.FnIForgotMyPasswordOperationCompleted == null)) {
                this.FnIForgotMyPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnIForgotMyPasswordOperationCompleted);
            }
            this.InvokeAsync("FnIForgotMyPassword", new object[] {
                        customerNo,
                        resetPasswordIs}, this.FnIForgotMyPasswordOperationCompleted, userState);
        }
        
        private void OnFnIForgotMyPasswordOperationCompleted(object arg) {
            if ((this.FnIForgotMyPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnIForgotMyPasswordCompleted(this, new FnIForgotMyPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:GetItemImage", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="GetItemImage_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetItemImage(string custNo) {
            object[] results = this.Invoke("GetItemImage", new object[] {
                        custNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemImageAsync(string custNo) {
            this.GetItemImageAsync(custNo, null);
        }
        
        /// <remarks/>
        public void GetItemImageAsync(string custNo, object userState) {
            if ((this.GetItemImageOperationCompleted == null)) {
                this.GetItemImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemImageOperationCompleted);
            }
            this.InvokeAsync("GetItemImage", new object[] {
                        custNo}, this.GetItemImageOperationCompleted, userState);
        }
        
        private void OnGetItemImageOperationCompleted(object arg) {
            if ((this.GetItemImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemImageCompleted(this, new GetItemImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void TestconnectionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddlogCompletedEventHandler(object sender, AddlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ResetPassCompletedEventHandler(object sender, ResetPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SendNotMailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CreateCommitteeCompletedEventHandler(object sender, CreateCommitteeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCommitteeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCommitteeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertMemberCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GenerateDirectorPayslipCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void VoteCompletedEventHandler(object sender, VoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RegisterCompletedEventHandler(object sender, RegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddLanguageCompletedEventHandler(object sender, AddLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AccreditationApplicationCompletedEventHandler(object sender, AccreditationApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccreditationApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccreditationApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Rfastep1CompletedEventHandler(object sender, Rfastep1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Rfastep1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Rfastep1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Rfastep2CompletedEventHandler(object sender, Rfastep2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Rfastep2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Rfastep2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Rfastep3CompletedEventHandler(object sender, Rfastep3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Rfastep3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Rfastep3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Rfastep4CompletedEventHandler(object sender, Rfastep4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Rfastep4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Rfastep4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SavegeneraldetailsCompletedEventHandler(object sender, SavegeneraldetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavegeneraldetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavegeneraldetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveExperienceCompletedEventHandler(object sender, SaveExperienceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveExperienceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveExperienceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SaveAcademicTrainingCompletedEventHandler(object sender, SaveAcademicTrainingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveAcademicTrainingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveAcademicTrainingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Rfmstep1CompletedEventHandler(object sender, Rfmstep1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Rfmstep1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Rfmstep1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Rfmstep2CompletedEventHandler(object sender, Rfmstep2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Rfmstep2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Rfmstep2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Rfmstep3CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Rfmstep4CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AccreditationRenewalCompletedEventHandler(object sender, AccreditationRenewalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccreditationRenewalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccreditationRenewalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddOtherPartyCompletedEventHandler(object sender, AddOtherPartyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOtherPartyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOtherPartyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void VerifyCompletedEventHandler(object sender, VerifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RfaGeneralDetailsCompletedEventHandler(object sender, RfaGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RfaGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RfaGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCustomerPhotoCompletedEventHandler(object sender, GetCustomerPhotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetBlobCompletedEventHandler(object sender, GetBlobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBlobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void PrintRfaCompletedEventHandler(object sender, PrintRfaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintRfaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintRfaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ResponseStep1CompletedEventHandler(object sender, ResponseStep1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResponseStep1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResponseStep1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ResponseStep2CompletedEventHandler(object sender, ResponseStep2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResponseStep2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResponseStep2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ResponseStep3CompletedEventHandler(object sender, ResponseStep3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResponseStep3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResponseStep3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ResponseStep4CompletedEventHandler(object sender, ResponseStep4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResponseStep4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResponseStep4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void PreviewResponseCompletedEventHandler(object sender, PreviewResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PreviewResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PreviewResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetResponseBlobCompletedEventHandler(object sender, GetResponseBlobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResponseBlobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResponseBlobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void BookFacilityCompletedEventHandler(object sender, BookFacilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookFacilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BookFacilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddExtraServicesCompletedEventHandler(object sender, AddExtraServicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddExtraServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddExtraServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SignupContactCompletedEventHandler(object sender, SignupContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignupContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SignupContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ForgotPassCompletedEventHandler(object sender, ForgotPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForgotPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForgotPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void PlaceBidCompletedEventHandler(object sender, PlaceBidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceBidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceBidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SendEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void FnDeleteTestIDCompletedEventHandler(object sender, FnDeleteTestIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteTestIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteTestIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void FnIForgotMyPasswordCompletedEventHandler(object sender, FnIForgotMyPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnIForgotMyPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnIForgotMyPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetItemImageCompletedEventHandler(object sender, GetItemImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591